#活性化関数の一種である「シグモイド関数」をpythonで実装

import numpy as np
import matplotlib.pylab as plt

def sigmoid(x) :
    return 1 / (1 + np.exp(-x))

x = np.arange(-5.0, 5.0, 0.1)
y = sigmoid(x)
plt.plot(x, y)
plt.ylim(-0.1, 1.1) #t軸の範囲を指定

#実行すると曲線を描いたグラフが表示される
plt.show()

#ステップ関数との比較
#異なる点
 #シグモイド関数 = 入力に対し連続的に出力が変化するため、滑らかな曲線を描く。水に関連付けて例えると「水車」
 #ステップ関数 = 0を境に急に出力が変化する線を描く。水に関連付けて例えると「ししおどし」

#同じ点
 #滑らかさに違いはあれど、大きな視点で見ると同じ形をしている。入力値が大きくなると1に近づき、入力値が小さいほど0に近づく
 #入力値の大小に関係なく出力信号の値を0から1の間に落とし込める
 #どちらも非線形関数であること（ざっくりいうと線形関数が直線を描くもの。非線形関数は直線以外を描くもの）